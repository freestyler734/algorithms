package OpenAdressingHashTable;

/**
 * Реализация хеш-таблиц с открытой адресацией.
 * Открытая адрессация - метод построения хеш-таблиц,
 * при котором используется массив в качестве базовой структуры,
 * индексы - значения хеш-функций от ключа, значения массива - добаляемые элементы.
 * Пробная последовательность - последовательность, в которой просматриваются ячейки хеш-таблицы для вставки и поиска элемента.
 * Проще говоря, это последовательность элементов, которую необходимо пройти чтобы выполнить одно действие(пр. вставка, поиск).
 * Размер пробной последовательности говорит об общей плотности таблице(чем больше плотность, тем больше вероятность коллизии).
 * Для решения проблем коллизий используется метод квадратичного пробирования -
 * метод при котором в случае коллизий к текущему индексу в хеш-таблице прибавляем небольшое фиксированное число
 * (чаще всего 1, потому что при большом или четном значениии и числа и размера массива, существует вероятность постоянного проскакивания пустых ячеек).
 * Проблема данного метода заключается в том, что c ростом элементов образуются большие блоки смежных записей, следовательно
 * увеличивается пробная последовательность и скорость работы с хеш-таблицей уменьшается.
 */
public class SquareProbingHashTable {
}
